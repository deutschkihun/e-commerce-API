openapi: 3.0.0
info:
  title: Online shop baseline API
  description: This documentation provides the ability to simulate user registration, login with talken, new product registration, registered product full inquiry, individual inquiry, product information modification and deletion functions essential to online shops. This documentation will help you understand and use api more easily. 
  contact: {}
  version: "1.0"
servers:
  - url: https://onlineshop-baseline-api.herokuapp.com/api/v1
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: register user
      operationId: registeruser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registeruserrequest"
            example:
              name: test
              email: test@gmail.com
              password: "123123123"
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: login user
      operationId: loginuser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/loginuserrequest"
            example:
              email: test@gmail.com
              password: "123123123"
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /products:
    post:
      tags:
        - Product
      summary: create product
      operationId: createproduct
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createproductrequest"
            example:
              name: laptop
              category: Preference
              price: 1000
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    get:
      tags:
        - Product
      summary: get all products
      operationId: getallproducts
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /products/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The products ID
    get:
      tags:
        - Product
      summary: get single product
      operationId: getsingleproduct
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    patch:
      tags:
        - Product
      summary: update product
      operationId: updateproduct
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updateproductrequest"
            example:
              name: computer
              category: Functionality
              price: 123
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    delete:
      tags:
        - Product
      summary: delete product
      operationId: deleteproduct
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
components:
  schemas:
    registeruserrequest:
      title: register user request
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: test
        email: test@gmail.com
        password: "123123123"
    loginuserrequest:
      title: login user request
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: test@gmail.com
        password: "123123123"
    createproductrequest:
      title: create product request
      required:
        - name
        - category
        - price
      type: object
      properties:
        name:
          type: string
        category:
          type: string
        price:
          type: integer
          format: int32
      example:
        name: laptop
        category: Preference
        price: 1000
    updateproductrequest:
      title: update product request
      required:
        - name
        - category
        - price
      type: object
      properties:
        name:
          type: string
        category:
          type: string
        price:
          type: integer
          format: int32
      example:
        name: computer
        category: Functionality
        price: 123
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
  - httpBearer: []
tags:
  - name: Auth
    description: ""
  - name: Product
    description: ""
